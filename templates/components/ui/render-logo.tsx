import * as React from "react"
import { cn } from "@/lib/utils"

export interface RenderLogoProps extends React.HTMLAttributes<HTMLDivElement> {
  variant?: "mark" | "full"
  height?: number
}

// Render logomark (icon only)
const RenderMark: React.FC<{ className?: string; height: number }> = ({ className, height }) => (
  <svg
    width="800"
    height="800"
    viewBox="206 194 400 400"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    style={{ height: `${height}px`, width: "auto" }}
    className={className}
  >
    <path
      d="M605.28 288.733C605.221 287.368 605.102 286.033 604.984 284.668C604.954 284.342 604.954 283.986 604.894 283.659C604.805 282.829 604.687 282.027 604.568 281.197C604.449 280.336 604.36 279.506 604.241 278.675C604.152 278.082 604.034 277.488 603.915 276.924C603.737 275.886 603.559 274.818 603.351 273.78C603.173 272.949 602.965 272.148 602.787 271.317C602.609 270.516 602.431 269.745 602.253 268.944C602.045 268.113 601.778 267.312 601.54 266.481C601.333 265.71 601.125 264.968 600.887 264.197C600.62 263.366 600.323 262.535 600.027 261.704C599.789 260.992 599.552 260.28 599.314 259.568C598.928 258.53 598.513 257.521 598.127 256.512C597.919 256.008 597.741 255.533 597.533 255.029C597.058 253.931 596.584 252.863 596.079 251.795C595.901 251.409 595.723 250.994 595.545 250.608C595.07 249.599 594.535 248.62 594.031 247.641C593.793 247.196 593.586 246.751 593.348 246.306C592.755 245.208 592.102 244.111 591.478 243.043C591.3 242.746 591.152 242.449 590.974 242.153C590.291 241.025 589.579 239.927 588.837 238.83C588.688 238.592 588.54 238.355 588.391 238.118C587.501 236.812 586.581 235.507 585.631 234.231C584.741 233.044 583.82 231.857 582.871 230.7C582.811 230.611 582.752 230.522 582.663 230.433C564.319 208.211 536.626 194.089 505.609 194.059V194L505.52 194.059H505.549C496.942 194.059 488.571 195.157 480.587 197.204C475.808 198.421 471.148 200.023 466.666 201.892C465.182 202.515 463.698 203.197 462.243 203.88C432.769 218.061 411.398 246.306 406.679 279.891H406.62C404.542 294.281 400.119 307.899 393.827 320.419H394.035C372.129 363.854 327.132 393.671 275.129 393.671C251.918 393.671 230.131 387.738 211.135 377.324C208.909 376.107 206.208 377.71 206.208 380.231V393.671H206V593.254H405.7V493.448H405.907V443.545C405.907 415.982 428.258 393.642 455.832 393.642H505.757C514.305 393.642 522.587 392.544 530.512 390.497C535.291 389.251 539.951 387.678 544.433 385.809C545.917 385.186 547.401 384.504 548.855 383.821C579.398 369.106 601.303 339.288 604.894 304.071C605.221 300.719 605.399 297.307 605.399 293.865C605.399 292.145 605.369 290.424 605.28 288.733Z"
      className="fill-current"
    />
  </svg>
)

// Render full logo (icon + text)
const RenderFullLogo: React.FC<{ className?: string; height: number }> = ({
  className,
  height,
}) => (
  <svg
    width="2909"
    height="1200"
    viewBox="380 454 2140 360"
    preserveAspectRatio="xMidYMid meet"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    style={{ height: `${height}px`, width: "auto" }}
    className={className}
  >
    <path
      d="M794.226 493.534C794.168 492.186 794.05 490.868 793.933 489.52C793.904 489.198 793.904 488.847 793.845 488.524C793.757 487.704 793.64 486.913 793.523 486.093C793.406 485.243 793.318 484.423 793.201 483.603C793.113 483.017 792.995 482.431 792.878 481.875C792.702 480.85 792.526 479.795 792.321 478.77C792.145 477.949 791.94 477.159 791.764 476.338C791.589 475.547 791.413 474.786 791.237 473.995C791.032 473.175 790.768 472.384 790.534 471.564C790.328 470.802 790.123 470.07 789.889 469.308C789.625 468.488 789.332 467.668 789.039 466.847C788.805 466.144 788.57 465.441 788.336 464.738C787.955 463.713 787.544 462.717 787.163 461.721C786.958 461.223 786.782 460.754 786.577 460.256C786.108 459.172 785.64 458.118 785.141 457.063C784.965 456.683 784.79 456.272 784.614 455.892C784.145 454.896 783.617 453.929 783.119 452.962C782.885 452.523 782.68 452.083 782.445 451.644C781.859 450.56 781.214 449.476 780.599 448.422C780.423 448.129 780.276 447.836 780.101 447.543C779.427 446.43 778.723 445.346 777.991 444.262C777.844 444.028 777.698 443.793 777.551 443.559C776.672 442.27 775.763 440.981 774.826 439.722C773.946 438.55 773.038 437.378 772.1 436.236C772.041 436.148 771.983 436.06 771.895 435.972C753.784 414.031 726.441 400.088 695.816 400.059V400L695.728 400.059H695.758C687.259 400.059 678.994 401.142 671.111 403.164C666.393 404.365 661.792 405.947 657.367 407.792C655.901 408.407 654.436 409.081 653 409.755C623.899 423.757 602.799 451.644 598.139 484.804H598.08C596.029 499.011 591.662 512.457 585.449 524.819H585.654C564.026 567.704 519.598 597.144 468.254 597.144C445.337 597.144 423.826 591.285 405.07 581.003C402.872 579.802 400.205 581.384 400.205 583.874V597.144H400V794.2H597.172V695.657H597.377V646.386C597.377 619.172 619.444 597.115 646.67 597.115H695.963C704.403 597.115 712.579 596.031 720.404 594.01C725.122 592.779 729.723 591.227 734.149 589.381C735.614 588.766 737.079 588.092 738.515 587.419C768.671 572.889 790.299 543.449 793.845 508.678C794.168 505.368 794.343 501.999 794.343 498.601C794.343 496.902 794.314 495.203 794.226 493.534Z"
      className="fill-current"
    />
    <path
      d="M1133.3 467.052C1201.02 467.052 1245.07 505.251 1245.07 566.679C1245.07 611.644 1219.19 645.009 1178.55 659.275L1258.14 795.167H1199.12L1124.86 666.276H1042.86V795.167H992.072V467.052H1133.36H1133.3ZM1042.83 512.75V621.077H1130.9C1171.31 621.077 1192.09 598.579 1192.09 566.679C1192.09 534.778 1171.28 512.75 1130.9 512.75H1042.83Z"
      className="fill-current"
    />
    <path
      d="M1387.47 558.213C1455.2 558.213 1499.24 608.51 1499.24 670.641C1499.24 677.906 1498.75 685.405 1497.31 692.874H1317.08C1319.25 727.704 1349.02 755.005 1389.17 755.005C1418.21 755.005 1441.42 742.673 1458.83 715.342L1494.14 740.974C1472.6 779.67 1430.29 799.971 1389.17 799.971C1319.01 799.971 1267.49 748.239 1267.49 679.312C1267.49 610.384 1317.08 558.184 1387.47 558.184M1450.6 657.078C1447.69 624.445 1420.35 601.45 1386.97 601.45C1351.42 601.45 1324.32 624.416 1318.28 657.078H1450.6Z"
      className="fill-current"
    />
    <path
      d="M1543.7 795.167V563.047H1591.85V592.311C1599.59 580.476 1621.6 558.213 1663.21 558.213C1727.07 558.213 1760.71 597.876 1760.71 654.207V795.167H1712.83V664.343C1712.83 625.91 1691.79 603.647 1655.74 603.647C1619.69 603.647 1591.65 625.881 1591.65 664.343V795.167H1543.7Z"
      className="fill-current"
    />
    <path
      d="M1916.77 558.213C1956.19 558.213 1982.33 572.713 1999.5 594.713V454.72H2047.39V795.167H1999.5V763.501C1982.33 785.5 1956.19 800 1916.77 800C1850.74 800 1800.16 749.235 1800.16 677.906C1800.16 606.576 1850.71 558.213 1916.77 558.213ZM1848.08 677.906C1848.08 720.703 1877.82 756.968 1922.57 756.968C1967.32 756.968 1999.27 720.703 1999.27 677.906C1999.27 635.108 1967.09 601.245 1922.57 601.245C1878.06 601.245 1848.08 635.108 1848.08 677.906Z"
      className="fill-current"
    />
    <path
      d="M2207.98 558.213C2275.71 558.213 2319.76 608.51 2319.76 670.641C2319.76 677.906 2319.26 685.405 2317.82 692.874H2137.59C2139.76 727.704 2169.53 755.005 2209.68 755.005C2238.73 755.005 2261.94 742.673 2279.34 715.342L2314.66 740.974C2293.12 779.67 2250.8 799.971 2209.68 799.971C2139.52 799.971 2088 748.239 2088 679.312C2088 610.15 2137.59 558.184 2207.98 558.184M2271.11 657.078C2268.21 624.445 2240.87 601.45 2207.49 601.45C2171.94 601.45 2144.83 624.416 2138.79 657.078H2271.11Z"
      className="fill-current"
    />
    <path
      d="M2366.03 795.167V563.047H2414.18V594.713C2427.25 569.315 2449.26 558.213 2474.67 558.213C2492.81 558.213 2506.61 564.013 2506.61 564.013L2501.54 608.012C2498.88 607.045 2488.47 602.68 2473.23 602.68C2447.59 602.68 2414.21 616.214 2414.21 668.707V795.167H2366.03Z"
      className="fill-current"
    />
  </svg>
)

const RenderLogo = React.forwardRef<HTMLDivElement, RenderLogoProps>(
  ({ className, variant = "full", height = 32, ...props }, ref) => {
    const LogoComponent = variant === "mark" ? RenderMark : RenderFullLogo

    return (
      <div ref={ref} className={cn("inline-flex items-center", className)} {...props}>
        {/* Light mode logo (black) */}
        <LogoComponent className="text-black dark:hidden" height={height} />
        {/* Dark mode logo (white) */}
        <LogoComponent className="hidden text-white dark:block" height={height} />
      </div>
    )
  }
)

RenderLogo.displayName = "RenderLogo"

export { RenderLogo }
